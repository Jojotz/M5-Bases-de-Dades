N1.1  db.restaurants.find()
N1.2  db.restaurants.find( {}, { restaurant_id: 1, name: 1, borough: 1, cuisine: 1 } )
N1.3  db.restaurants.find( {}, { restaurant_id: 1, name: 1, borough: 1, cuisine: 1, _id: 0 } )
N1.4  db.restaurants.find( {}, { restaurant_id: 1, name: 1, borough: 1, address: { zipcode: 1 }, _id: 0 } )
N1.5  db.restaurants.find( { borough: "Bronx" } , {} )	
N1.6  db.restaurants.find( { borough: "Bronx" } , {} ).limit(5)
N1.7  db.restaurants.find( { borough: "Bronx" } , {} ).skip(5).limit(5)
N1.8  db.restaurants.find( { 'grades.0.score' : { "$gt": NumberInt(90) } } ) 	  		/*busco a l'index 0 ja que és el més actual*/
N1.8  db.restaurants.find( { grades: { $elemMatch: { score: { $gt: 90 } } } } )	   	 	/*busco a tots, independentment de la data*/
N1.9  db.restaurants.find( { grades: { $elemMatch: { score: { $gt: 80, $lt: 100 } } } } ) 	/*independent de la data*/
N1.9  db.restaurants.find( { 'grades.0.score' : { "$gt": 80, $lt: 100  } } ) 			/*tenint en compte última data, index 0*/
N1.10 db.restaurants.find( { 'address.coord.0': { "$lt": -95.754168 } } )
N1.11 db.restaurants.find( { "$and": [ { "cuisine": { "$ne": "American " } }, { "address.coord.0": { "$lt": -65.754168 } }, { grades: { $elemMatch: { score: { $gt: 70 } } } } ] } )
N1.12 db.restaurants.find( { cuisine: { $ne: "American " }, "address.coord.0": { "$lt": -65.754168 }, grades: { $elemMatch: { score: { $gt: 70 } } } } )
        
N2.1  db.restaurants.find( { cuisine: { $ne: "American " }, grades: { $elemMatch: { grade: { $eq: "A" } } }, borough: { $ne: "Brooklyn" } } ).sort( { cuisine: -1 } )
N2.2  db.restaurants.find( { name: { $in: [/^Wil/] } }, { restaurant_id: 1, name: 1, borough: 1, cuisine: 1, _id: 0 } )
N2.3  db.restaurants.find( { name: { $in: [/ces$/] } }, { restaurant_id: 1, name: 1, borough: 1, cuisine: 1, _id: 0 } )
N2.4  db.restaurants.find( { name: { $in: [/.*Reg.*/] } }, { restaurant_id: 1, name: 1, borough: 1, cuisine: 1, _id: 0 } )
N2.5  db.restaurants.find( { borough: { $eq: "Bronx" }, cuisine: { $in: ["American ", "Chinese"] } } )
N2.6  db.restaurants.find( { borough: { $in: ["Staten Island", "Queens", "Bronx", "Brooklyn"] } }, { restaurant_id: 1, name: 1, borough: 1, cuisine: 1, _id: 0 } ) 
N2.7  db.restaurants.find( { borough: { $nin: ["Staten Island", "Queens", "Bronx", "Brooklyn"] } }, { restaurant_id: 1, name: 1, borough: 1, cuisine: 1, _id: 0 } )
N2.8  db.restaurants.find( { grades: { $elemMatch: { score: { $lte: 10 } } } }, { grades: 1, restaurant_id: 1, name: 1, borough: 1, cuisine: 1, _id: 0 } )      
N2.9  db.restaurants.find( { "$or": [ { "cuisine": { "$eq": "Seafood" } }, { "name": { "$in": [/^Wil/] } } ] }, { restaurant_id: 1, name: 1, borough: 1, cuisine: 1, _id: 0 } )
N2.10 db.restaurants.find( { grades: { $elemMatch: { grade:'A', score: 11, date: ISODate ("2014-08-11T00:00:00Z") } } }, { restaurant_id: 1, name: 1, grades: 1, _id: 0 } )
           
N3.1  db.restaurants.find( { 'grades.1': { $elemMatch: { grade:'A', score: 9, date: ISODate ("2014-08-11T00:00:00Z") } } }, { restaurant_id: 1, name: 1, grades: 1, _id: 0 } )
N3.2
N3.3
N3.4
N3.5
N3.6
N3.7
N3.8
N3.9
N3.10
